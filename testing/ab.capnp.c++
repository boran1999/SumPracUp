// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ab.capnp

#include "ab.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<93> b_ff989f0db21f4e4c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     76,  78,  31, 178,  13, 159, 152, 255,
      9,   0,   0,   0,   1,   0,   1,   0,
    134,  67, 126, 158,  34, 108, 255, 237,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  98,  46,  99,  97, 112, 110, 112,
     58,  80, 101, 114, 115, 111, 110,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    249,  18, 159,  58, 126, 188,  86, 225,
      1,   0,   0,   0,  98,   0,   0,   0,
     80, 104, 111, 110, 101,  78, 117, 109,
     98, 101, 114,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    182, 233, 210, 206, 225, 199, 175, 224,
    157,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109,  97, 105, 108,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 104, 111, 110, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    249,  18, 159,  58, 126, 188,  86, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 108, 111, 121, 109, 101,
    110, 116,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff989f0db21f4e4c = b_ff989f0db21f4e4c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ff989f0db21f4e4c[] = {
  &s_e0afc7e1ced2e9b6,
  &s_e156bc7e3a9f12f9,
};
static const uint16_t m_ff989f0db21f4e4c[] = {2, 4, 0, 1, 3};
static const uint16_t i_ff989f0db21f4e4c[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_ff989f0db21f4e4c = {
  0xff989f0db21f4e4c, b_ff989f0db21f4e4c.words, 93, d_ff989f0db21f4e4c, m_ff989f0db21f4e4c,
  2, 5, i_ff989f0db21f4e4c, nullptr, nullptr, { &s_ff989f0db21f4e4c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_e156bc7e3a9f12f9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    249,  18, 159,  58, 126, 188,  86, 225,
     16,   0,   0,   0,   1,   0,   1,   0,
     76,  78,  31, 178,  13, 159, 152, 255,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  98,  46,  99,  97, 112, 110, 112,
     58,  80, 101, 114, 115, 111, 110,  46,
     80, 104, 111, 110, 101,  78, 117, 109,
     98, 101, 114,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     50, 212,  39,  55,  42, 120, 199, 203,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     50, 212,  39,  55,  42, 120, 199, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e156bc7e3a9f12f9 = b_e156bc7e3a9f12f9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e156bc7e3a9f12f9[] = {
  &s_cbc7782a3727d432,
};
static const uint16_t m_e156bc7e3a9f12f9[] = {0, 1};
static const uint16_t i_e156bc7e3a9f12f9[] = {0, 1};
const ::capnp::_::RawSchema s_e156bc7e3a9f12f9 = {
  0xe156bc7e3a9f12f9, b_e156bc7e3a9f12f9.words, 51, d_e156bc7e3a9f12f9, m_e156bc7e3a9f12f9,
  1, 2, i_e156bc7e3a9f12f9, nullptr, nullptr, { &s_e156bc7e3a9f12f9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<31> b_cbc7782a3727d432 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50, 212,  39,  55,  42, 120, 199, 203,
     28,   0,   0,   0,   2,   0,   0,   0,
    249,  18, 159,  58, 126, 188,  86, 225,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  98,  46,  99,  97, 112, 110, 112,
     58,  80, 101, 114, 115, 111, 110,  46,
     80, 104, 111, 110, 101,  78, 117, 109,
     98, 101, 114,  46,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111,  98, 105, 108, 101,   0,   0,
    104, 111, 109, 101,   0,   0,   0,   0,
    119, 111, 114, 107,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cbc7782a3727d432 = b_cbc7782a3727d432.words;
#if !CAPNP_LITE
static const uint16_t m_cbc7782a3727d432[] = {1, 0, 2};
const ::capnp::_::RawSchema s_cbc7782a3727d432 = {
  0xcbc7782a3727d432, b_cbc7782a3727d432.words, 31, nullptr, m_cbc7782a3727d432,
  0, 3, nullptr, nullptr, nullptr, { &s_cbc7782a3727d432, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_cbc7782a3727d432, cbc7782a3727d432);
static const ::capnp::_::AlignedData<80> b_e0afc7e1ced2e9b6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    182, 233, 210, 206, 225, 199, 175, 224,
     16,   0,   0,   0,   1,   0,   1,   0,
     76,  78,  31, 178,  13, 159, 152, 255,
      4,   0,   7,   0,   1,   0,   4,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  98,  46,  99,  97, 112, 110, 112,
     58,  80, 101, 114, 115, 111, 110,  46,
    101, 109, 112, 108, 111, 121, 109, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 101, 109, 112, 108, 111, 121,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 108, 111, 121, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 111, 111, 108,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 108, 102,  69, 109, 112, 108,
    111, 121, 101, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e0afc7e1ced2e9b6 = b_e0afc7e1ced2e9b6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e0afc7e1ced2e9b6[] = {
  &s_ff989f0db21f4e4c,
};
static const uint16_t m_e0afc7e1ced2e9b6[] = {1, 2, 3, 0};
static const uint16_t i_e0afc7e1ced2e9b6[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_e0afc7e1ced2e9b6 = {
  0xe0afc7e1ced2e9b6, b_e0afc7e1ced2e9b6.words, 80, d_e0afc7e1ced2e9b6, m_e0afc7e1ced2e9b6,
  1, 4, i_e0afc7e1ced2e9b6, nullptr, nullptr, { &s_e0afc7e1ced2e9b6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_c27350e35cb21c38 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     56,  28, 178,  92, 227,  80, 115, 194,
      9,   0,   0,   0,   1,   0,   0,   0,
    134,  67, 126, 158,  34, 108, 255, 237,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  98,  46,  99,  97, 112, 110, 112,
     58,  65, 100, 100, 114, 101, 115, 115,
     66, 111, 111, 107,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    112, 101, 111, 112, 108, 101,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     76,  78,  31, 178,  13, 159, 152, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c27350e35cb21c38 = b_c27350e35cb21c38.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c27350e35cb21c38[] = {
  &s_ff989f0db21f4e4c,
};
static const uint16_t m_c27350e35cb21c38[] = {0};
static const uint16_t i_c27350e35cb21c38[] = {0};
const ::capnp::_::RawSchema s_c27350e35cb21c38 = {
  0xc27350e35cb21c38, b_c27350e35cb21c38.words, 36, d_c27350e35cb21c38, m_c27350e35cb21c38,
  1, 1, i_c27350e35cb21c38, nullptr, nullptr, { &s_c27350e35cb21c38, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Person
constexpr uint16_t Person::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Person::PhoneNumber
constexpr uint16_t Person::PhoneNumber::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::PhoneNumber::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::PhoneNumber::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::PhoneNumber::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Person::Employment
constexpr uint16_t Person::Employment::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::Employment::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::Employment::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::Employment::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// AddressBook
constexpr uint16_t AddressBook::_capnpPrivate::dataWordSize;
constexpr uint16_t AddressBook::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AddressBook::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AddressBook::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



